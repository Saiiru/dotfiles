#!/usr/bin/env bash

# ~/.local/bin/mkcpp
# KORA: Wizard para criar um projeto C++ com Makefile e SDL2

log() { echo "üêâ KORA C++: $1"; }
warn() { echo "‚ö†Ô∏è  KORA C++: Aviso - $1"; }
error() { echo "‚ùå KORA C++: Erro - $1"; exit 1; }

if [ -z "$1" ]; then
    error "Uso: mkcpp <nome_do_projeto>"
fi

PROJECT_NAME=$1
PROJECT_DIR="./$PROJECT_NAME"

log "Criando diret√≥rio para o projeto: $PROJECT_NAME"
mkdir -p "$PROJECT_DIR/src" "$PROJECT_DIR/include" "$PROJECT_DIR/lib" "$PROJECT_DIR/assets" || error "Falha ao criar diret√≥rios."

cd "$PROJECT_DIR" || error "Falha ao entrar no diret√≥rio do projeto."

log "Criando Makefile padr√£o para SDL2..."
cat << EOF > Makefile
# Makefile para projetos C++ com SDL2

TARGET = $PROJECT_NAME
SRC_DIR = src
INC_DIR = include
BUILD_DIR = build
BIN_DIR = bin

CC = g++
CFLAGS = -std=c++17 -Wall -Wextra -g -I\$(INC_DIR)
LDFLAGS = -lSDL2 -lSDL2_image -lSDL2_ttf -lGL -lGLEW -lglfw

SRC_FILES = \$(wildcard \$(SRC_DIR)/*.cpp)
OBJ_FILES = \$(patsubst \$(SRC_DIR)/%.cpp,\$(BUILD_DIR)/%.o,\$(SRC_FILES))

.PHONY: all clean run

all: \$(BIN_DIR)/\$(TARGET)

\$(BUILD_DIR)/%.o: \$(SRC_DIR)/%.cpp
	@mkdir -p \$(BUILD_DIR)
	\$(CC) \$(CFLAGS) -c \$< -o \$@

\$(BIN_DIR)/\$(TARGET): \$(OBJ_FILES)
	@mkdir -p \$(BIN_DIR)
	\$(CC) \$(LDFLAGS) \$^ -o \$@

run: all
	./\$(BIN_DIR)/\$(TARGET)

clean:
	rm -rf \$(BUILD_DIR) \$(BIN_DIR)
EOF

log "Criando esqueleto de arquivo principal em C++ (src/main.cpp)..."
cat << EOF > src/main.cpp
#include <iostream>
#include <SDL2/SDL.h>

int main(int argc, char* argv[]) {
    if (SDL_Init(SDL_INIT_VIDEO) != 0) {
        std::cerr << "SDL_Init Error: " << SDL_GetError() << std::endl;
        return 1;
    }

    SDL_Window* win = SDL_CreateWindow("$PROJECT_NAME", 100, 100, 640, 480, SDL_WINDOW_SHOWN);
    if (win == nullptr) {
        std::cerr << "SDL_CreateWindow Error: " << SDL_GetError() << std::endl;
        SDL_Quit();
        return 1;
    }

    SDL_Renderer* ren = SDL_CreateRenderer(win, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);
    if (ren == nullptr) {
        SDL_DestroyWindow(win);
        std::cerr << "SDL_CreateRenderer Error: " << SDL_GetError() << std::endl;
        SDL_Quit();
        return 1;
    }

    bool running = true;
    SDL_Event e;
    while (running) {
        while (SDL_PollEvent(&e)) {
            if (e.type == SDL_QUIT) {
                running = false;
            }
        }
        SDL_RenderClear(ren);
        SDL_RenderPresent(ren);
    }

    SDL_DestroyRenderer(ren);
    SDL_DestroyWindow(win);
    SDL_Quit();

    return 0;
}
EOF

log "Criando README.md b√°sico..."
echo "# $PROJECT_NAME" > README.md
echo "" >> README.md
echo "## Constru√ß√£o" >> README.md
echo "\`make\`" >> README.md
echo "" >> README.md
echo "## Execu√ß√£o" >> README.md
echo "\`make run\`" >> README.md

log "Projeto '$PROJECT_NAME' criado com sucesso!"
log "Para compilar e executar, use 'make run'."
