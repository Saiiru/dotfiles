: 1758415071:0;yay -Sy firedragon
: 1758423953:0;Hyde theme import "Vanta Black" https://github.com/rishav12s/Vanta-Black
: 1758423962:0;cd HyDE
: 1758423963:0;ls
: 1758423967:0;cd Scripts
: 1758423967:0;ls
: 1758423974:0;./themepatcher.sh
: 1758424003:0;./themepatcher.sh Vanta Black https://github.com/rishav12s/Vanta-Black
: 1758424013:0;./themepatcher.sh 'Vanta Black' https://github.com/rishav12s/Vanta-Black
: 1758429979:0;sudo pacman -S --needed mesa lib32-mesa vulkan-radeon lib32-vulkan-radeon \\
                 vulkan-tools vulkan-icd-loader lib32-vulkan-icd-loader
: 1758430037:0;yay -Sy opengl-man-pages --noconfirm && sudo pacman -S --needed steam steam-devices # (steam-native-runtime √© opcional)\
sudo pacman -S --needed mangohud goverlay    # overlay + GUI opcional\
sudo pacman -S --needed gamemode lib32-gamemode\
sudo pacman -S --needed gamescope\
sudo pacman -S --needed pipewire wireplumber pipewire-alsa pipewire-pulse \\
                     lib32-libpulse lib32-alsa-plugins lib32-pipewire\
# protonup (linha de comando)\
python -m pip install --user --break-system-packages protonup\
~/.local/bin/protonup -t GE-Proton install  # instala o Proton-GE mais recente\

: 1758430599:0;pkill hypridle
: 1758430640:0;# make temp working directory\
echo "Creating temporary working directory..."\
rm -rf /tmp/proton-ge-custom\
mkdir /tmp/proton-ge-custom\
cd /tmp/proton-ge-custom\
\
# download tarball\
echo "Fetching tarball URL..."\
tarball_url=$(curl -s https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest | grep browser_download_url | cut -d\" -f4 | grep .tar.gz)\
tarball_name=$(basename $tarball_url)\
echo "Downloading tarball: $tarball_name..."\
curl -# -L $tarball_url -o $tarball_name --no-progress-meter\
\
# download checksum\
echo "Fetching checksum URL..."\
checksum_url=$(curl -s https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest | grep browser_download_url | cut -d\" -f4 | grep .sha512sum)\
checksum_name=$(basename $checksum_url)\
echo "Downloading checksum: $checksum_name..."\
curl -# -L $checksum_url -o $checksum_name --no-progress-meter\
\
# check tarball with checksum\
echo "Verifying tarball $tarball_name with checksum $checksum_name..."\
sha512sum -c $checksum_name\
# if result is ok, continue\
\
# make steam directory if it does not exist\
echo "Creating Steam directory if it does not exist..."\
mkdir -p ~/.steam/steam/compatibilitytools.d\
\
# extract proton tarball to steam directory\
echo "Extracting $tarball_name to Steam directory..."\
tar -xf $tarball_name -C ~/.steam/steam/compatibilitytools.d/\
echo "All done :)"
: 1758430656:0;ls
: 1758430658:0;cd
: 1758430664:0;nvim protonge.sh
: 1758430681:0;chmod +x ./protonge.sh
: 1758430684:0;./protonge.sh
: 1758431121:0;sudo pacman -S --needed steam steam-devices
: 1758431131:0;yay -S --needed steam steam-devices
: 1758431213:0;yay -Sy steam
: 1758431233:0;sudo pacman -S --needed mangohud goverlay
: 1758431246:0;sudo pacman -S --needed gamemode lib32-gamemode
: 1758431250:0;sudo pacman -S --needed gamescope
: 1758431255:0;sudo pacman -S --needed pipewire wireplumber pipewire-alsa pipewire-pulse \\
                     lib32-libpulse lib32-alsa-plugins lib32-pipewire
: 1758431301:0;cd .config
: 1758431310:0;nvim hypr/userprefs.conf
: 1758431321:0;clear
: 1758431331:0;sudo chown root:root /home
: 1758431335:0;sudo chmod 755 /home
: 1758431339:0;sudo chown -R sairu:sairu /home/sairu
: 1758431350:0;mount | grep " /home "
: 1758431363:0;sysctl kernel.unprivileged_userns_clone
: 1758431370:0;echo ${XDG_RUNTIME_DIR:-/run/user/$UID}
: 1758431373:0;sudo mkdir -p /run/user/$UID && sudo chown $USER:$USER /run/user/$UID && chmod 700 /run/user/$UID
: 1758431379:0;sudo pacman -Syu --needed steam steam-devices lib32-gcc-libs lib32-glibc
: 1758431387:0;rm -rf ~/.steam ~/.local/share/Steam
: 1758431390:0;steam --reset || true
: 1758431978:0;sudo pacman -S --needed mesa lib32-mesa vulkan-radeon lib32-vulkan-radeon \\
                     vulkan-tools vulkan-icd-loader lib32-vulkan-icd-loader\

: 1758432008:0;sudo pacman -S --needed xdg-desktop-portal xdg-desktop-portal-hyprland \\
                        xdg-desktop-portal-gtk
: 1758432013:0;systemctl --user enable --now xdg-desktop-portal xdg-desktop-portal-hyprland
: 1758432031:0;sudo pacman -S --needed power-profiles-daemon\
systemctl --user enable --now wireplumber\
sudo systemctl enable --now power-profiles-daemon\

: 1758469361:0;zsh
: 1758469365:0;ls
: 1758469366:0;clear
: 1758469367:0;ls
: 1758469368:0;lc
: 1758469370:0;clear
: 1758469371:0;ls
: 1758474209:0;2;9u;10u;9u2;13u
: 1758491568:0;sudo pacman -S --needed hidapi
: 1758491736:0;nvim hypr/keybindings.conf
: 1758500693:0;ssh-keygen -t ed25519 -C  "sairufsa@gmail.com"
: 1758500700:0;eval "$(ssh-agent -s)"
: 1758500702:0;ssh-add ~/.ssh/id_ed25519
: 1758500705:0;cat ~/.ssh/id_ed25519.pub
: 1758500741:0;ssh -T git@github.com
: 1758500757:0;nvim ~/.ssh/config
: 1758500765:0;ssh -T git@github.com
: 1758500815:0;cd 
: 1758500823:0;git clone --recurse-submodules git@github.com:Saiiru/dotfiles.git
: 1758501243:0;cd .firedragon
: 1758501243:0;ls
: 1758501322:0;cd vqivjvwk.default
: 1758501323:0;ls
: 1758501326:0;cd
: 1758501327:0;ls
: 1758501329:0;cd dotfiles
: 1758501330:0;ls
: 1758501352:0;rm -rf caelestia conversation.txt deploy.sh docs gemini lol obbak obisidian security spellbook 
: 1758501353:0;ls
: 1758501354:0;ls -a
: 1758501387:0;mkdir firedragon/chrome/
: 1758501390:0;cd firedragon/chrome
: 1758501390:0;ls
: 1758501392:0;ls -a
: 1758501397:0;nvim userChrome.css
: 1758501413:0;nvim userContent.css
: 1758501417:0;cd
: 1758501420:0;cd .firedragon
: 1758501420:0;ls
: 1758501426:0;cd vqivjvwk.default
: 1758501427:0;ls
: 1758501429:0;ls -a
: 1758501432:0;cat times.json
: 1758501433:0;ls
: 1758501447:0;cd ..
: 1758501449:0;cd dzsceo0a.default-release
: 1758501449:0;ls
: 1758501466:0;cd chrome
: 1758501467:0;ls
: 1758501471:0;cat userChrome.css
: 1758501488:0;cp userChrome.css usercromebak
: 1758501494:0;cp userContent.css usercontentbak
: 1758501500:0;cat usercontentbak
: 1758501506:0;rm -rf userChrome.css
: 1758501509:0;rm -rf userContent.css
: 1758501512:0;ln -sf 
: 1758501539:0;ln -sf ~/dotfiles/firedragon/chrome/* ~/.firedragon/dzsceo0a.default-release/chrome
: 1758501540:0;ls
: 1758501546:0;cat userChrome.css
: 1758501548:0;clear
: 1758502469:0;ls
: 1758502469:0;cd
: 1758502471:0;cd dotfiles
: 1758502471:0;ls
: 1758502488:0;git rm -r --cached config/tmux/.tmux/plugins || true
: 1758502499:0;git rm -r --cached config/zsh/.zinit       || true
: 1758502506:0;rm -rf .git/modules/config/tmux/.tmux/plugins .git/modules/config/zsh/.zinit 2>/dev/null || true
: 1758502511:0;sed -i '/tmux\/\.tmux\/plugins/d;/config\/zsh\/\.zinit/d' .gitmodules 2>/dev/null || true
: 1758502515:0;git add -A && git commit -m "Limpa subm√≥dulos legados"
: 1758502528:0;git config --global user.email  "[sairufsa@gmail.com]"
: 1758502538:0;git config --global user.name "[Saiiru]"
: 1758502557:0;sudo pacman -Sy base-devel git curl unzip zip zsh neovim kitty fastfetch \\
pipewire wireplumber pipewire-alsa pipewire-pulse pipewire-jack \\
bluez bluez-utils polkit networkmanager \\
hyprland waybar wofi grim slurp satty wl-clipboard cliphist \\
xdg-desktop-portal xdg-desktop-portal-gtk xdg-desktop-portal-hyprland \\
mako playerctl brightnessctl \\
ttf-jetbrains-mono-nerd noto-fonts noto-fonts-emoji
: 1758502569:0;sudo pacman -Sy --needed --noconfirm base-devel git curl unzip zip zsh neovim kitty fastfetch \\
pipewire wireplumber pipewire-alsa pipewire-pulse pipewire-jack \\
bluez bluez-utils polkit networkmanager \\
hyprland waybar wofi grim slurp satty wl-clipboard cliphist \\
xdg-desktop-portal xdg-desktop-portal-gtk xdg-desktop-portal-hyprland \\
mako playerctl brightnessctl \\
ttf-jetbrains-mono-nerd noto-fonts noto-fonts-emoji
: 1758502750:0;sudo pacman -S --needed zram-generator\
sudo tee /etc/systemd/zram-generator.conf <<'EOF'\
[zram0]\
zram-size = ram / 2\
compression-algorithm = zstd\
swap-priority = 100\
EOF\
sudo systemctl daemon-reload\
sudo systemctl enable --now /dev/zram0.swap\

: 1758503201:0;# 1) Conf (se j√ÉÅ fez, pode pular)\
sudo tee /etc/systemd/zram-generator.conf >/dev/null <<'EOF'\
[zram0]\
zram-size = ram / 2\
compression-algorithm = zstd\
swap-priority = 100\
EOF\
\
# 2) Recarrega generators\
sudo systemctl daemon-reload\
\
# 3) Sobe o dispositivo zram e ativa swap (tente nas duas formas, variam por vers√£o)\
sudo systemctl start zram-create@zram0.service 2>/dev/null || \\
sudo systemctl start systemd-zram-setup@zram0.service\
\
sudo systemctl start dev-zram0.swap 2>/dev/null || \\
sudo systemctl start /dev/zram0.swap\
\
# 4) Verifique\
swapon --show\
lsblk -o NAME,TYPE,SIZE,MOUNTPOINT | grep zram\
journalctl -b -u 'zram*' --no-pager | tail -n 50\

: 1758503225:0;yay -S oh-my-posh-bin --noconfirm
: 1758503233:0;ls
: 1758503235:0;cd config
: 1758503241:0;ls
: 1758503275:0;mv oh-my-posh zsh tmux kitty ghostty gh-dash foot fastfetch spicetify nvim ..
: 1758503279:0;rm -rf *
: 1758503281:0;ls
: 1758503282:0;cd ..
: 1758503282:0;ls
: 1758503304:0;mv oh-my-posh zsh tmux kitty ghostty gh-dash foot fastfetch spicetify nvim config
: 1758503305:0;ls
: 1758503308:0;cd config
: 1758503308:0;ls
: 1758503323:0;ln -sf ~/dotfiles/config/* ~/.config
: 1758503325:0;ls
: 1758503328:0;cd
: 1758503330:0;cat .zshrc
: 1758503332:0;ls
: 1758503333:0;cd .config
: 1758503334:0;ls
: 1758503335:0;cd zsh
: 1758503336:0;ls
: 1758503340:0;nvim .zshrc
: 1758503377:0;ls
: 1758503379:0;nvim user.zsh
: 1758503386:0;ls
: 1758503389:0;nvim prompt.zsh
: 1758503426:0;ls
: 1758503444:0;yay -SFyy eza 
: 1758503449:0;yay -Fyy  
: 1758503478:0;yay -Syy  eza 
: 1758503486:0;clear
: 1758503487:0;ls
: 1758503488:0;clear
: 1758503488:0;ls
: 1758503489:0;clear
: 1758503494:0;ls
: 1758503496:0;cd
: 1758503497:0;zsh
: 1758503498:0;clear
: 1758503499:0;ls
: 1758503501:0;cd .config
: 1758503502:0;ls
: 1758503503:0;cd nvim
: 1758503503:0;ls
: 1758503505:0;ls -a
: 1758503546:0;ls
: 1758503551:0;git checkout -b main
: 1758503554:0;git checkout main
: 1758503556:0;ls
: 1758503559:0;cleare
: 1758503564:0;ls
: 1758503566:0;clear
: 1758503569:0;cd tiny-nvim
: 1758503570:0;ls
: 1758503571:0;cd ..
: 1758503573:0;rm -rf tiny-nvim
: 1758503573:0;ls
: 1758503576:0;./install.sh
: 1758503609:0;echo "eval \"\$(/home/sairu/.local/bin/mise activate zsh)\"" >> "/home/sairu/.config/zsh/.zshrc"
: 1758503610:0;zsh
: 1758503611:0;ls
: 1758503612:0;mise
: 1758503613:0;clear
: 1758504247:0;systemctl status dev-zram0.swap || systemctl status /dev/zram0.swap\
zramctl\
swapon --show --bytes
: 1758504266:0;cd
: 1758504266:0;ls
: 1758504307:0;nvim
: 1758504345:0;yay -Sy treesitter
: 1758504355:0;yay -Sy treesitter-cli
: 1758504433:0;yay -Sy nvim-treesitter
: 1758504438:0;ls
: 1758504440:0;cd .config
: 1758504441:0;ls
: 1758504442:0;cd nvim
: 1758504442:0;ls
: 1758504449:0;rg nvim-tree
: 1758504458:0;nvim init.lua
: 1758504480:0;clear
: 1758506549:0;cat > ~/scripts/install_base.sh <<'EOF'\
#!/usr/bin/env bash\
set -euo pipefail\
\
sudo pacman -Syu --needed --noconfirm \\
  base-devel git curl unzip zip rsync zsh neovim kitty fastfetch eza bat ripgrep fd fzf zoxide btop \\
  pipewire wireplumber pipewire-alsa pipewire-pulse pipewire-jack pavucontrol \\
  networkmanager bluez bluez-utils polkit \\
  hyprland waybar wofi grim slurp satty wl-clipboard cliphist mako playerctl brightnessctl \\
  xdg-desktop-portal xdg-desktop-portal-gtk xdg-desktop-portal-hyprland \\
  ttf-jetbrains-mono-nerd ttf-rubik noto-fonts noto-fonts-emoji\
\
systemctl --user enable --now cliphist.service || true\
sudo systemctl enable --now NetworkManager bluetooth\
\
# Wayland env\
sudo mkdir -p /etc/environment.d\
sudo tee /etc/environment.d/10-wayland.conf >/dev/null <<'EOT'\
XDG_CURRENT_DESKTOP=Hyprland\
XDG_SESSION_TYPE=wayland\
GDK_BACKEND=wayland,x11\
QT_QPA_PLATFORM=wayland\
SDL_VIDEODRIVER=wayland\
CLUTTER_BACKEND=wayland\
MOZ_ENABLE_WAYLAND=1\
EOT\
\
# SDDM\
sudo pacman -S --needed --noconfirm sddm\
sudo systemctl enable --now sddm\
\
# ZRAM\
sudo pacman -S --needed --noconfirm zram-generator\
sudo tee /etc/systemd/zram-generator.conf >/dev/null <<'EOT'\
[zram0]\
zram-size = ram / 2\
compression-algorithm = zstd\
swap-priority = 100\
EOT\
sudo systemctl daemon-reload\
# ativa no boot automaticamente; sobe j√ÉÅ:\
sudo systemctl start dev-zram0.swap || sudo systemctl start /dev/zram0.swap || true\
\
echo "‚ÉºÉ¥ base pronta."\
EOF\
chmod +x ~/scripts/install_base.sh\
~/scripts/install_base.sh\

: 1758506561:0;cat > ~/scripts/install_base.sh <<'EOF'\
#!/usr/bin/env bash\
set -euo pipefail\
\
sudo pacman -Syu --needed --noconfirm \\
  base-devel git curl unzip zip rsync zsh neovim kitty fastfetch eza bat ripgrep fd fzf zoxide btop \\
  pipewire wireplumber pipewire-alsa pipewire-pulse pipewire-jack pavucontrol \\
  networkmanager bluez bluez-utils polkit \\
  hyprland waybar wofi grim slurp satty wl-clipboard cliphist mako playerctl brightnessctl \\
  xdg-desktop-portal xdg-desktop-portal-gtk xdg-desktop-portal-hyprland \\
  ttf-jetbrains-mono-nerd ttf-rubik noto-fonts noto-fonts-emoji\
\
systemctl --user enable --now cliphist.service || true\
sudo systemctl enable --now NetworkManager bluetooth\
\
# Wayland env\
sudo mkdir -p /etc/environment.d\
sudo tee /etc/environment.d/10-wayland.conf >/dev/null <<'EOT'\
XDG_CURRENT_DESKTOP=Hyprland\
XDG_SESSION_TYPE=wayland\
GDK_BACKEND=wayland,x11\
QT_QPA_PLATFORM=wayland\
SDL_VIDEODRIVER=wayland\
CLUTTER_BACKEND=wayland\
MOZ_ENABLE_WAYLAND=1\
EOT\
\
# SDDM\
sudo pacman -S --needed --noconfirm sddm\
sudo systemctl enable --now sddm\
\
# ZRAM\
sudo pacman -S --needed --noconfirm zram-generator\
sudo tee /etc/systemd/zram-generator.conf >/dev/null <<'EOT'\
[zram0]\
zram-size = ram / 2\
compression-algorithm = zstd\
swap-priority = 100\
EOT\
sudo systemctl daemon-reload\
# ativa no boot automaticamente; sobe j√ÉÅ:\
sudo systemctl start dev-zram0.swap || sudo systemctl start /dev/zram0.swap || true\
\
echo "‚ÉºÉ¥ base pronta."\
EOF\
chmod +x ~/scripts/install_base.sh
: 1758506584:0;cat > ~/dotfiles/scripts/install_base.sh 
: 1758506592:0;mkdir ~/dotfiles/scripts
: 1758506603:0;cat > ~/dotfiles/scripts/install_base.sh  <<'EOF'\
#!/usr/bin/env bash\
set -euo pipefail\
\
sudo pacman -Syu --needed --noconfirm \\
  base-devel git curl unzip zip rsync zsh neovim kitty fastfetch eza bat ripgrep fd fzf zoxide btop \\
  pipewire wireplumber pipewire-alsa pipewire-pulse pipewire-jack pavucontrol \\
  networkmanager bluez bluez-utils polkit \\
  hyprland waybar wofi grim slurp satty wl-clipboard cliphist mako playerctl brightnessctl \\
  xdg-desktop-portal xdg-desktop-portal-gtk xdg-desktop-portal-hyprland \\
  ttf-jetbrains-mono-nerd ttf-rubik noto-fonts noto-fonts-emoji\
\
systemctl --user enable --now cliphist.service || true\
sudo systemctl enable --now NetworkManager bluetooth\
\
# Wayland env\
sudo mkdir -p /etc/environment.d\
sudo tee /etc/environment.d/10-wayland.conf >/dev/null <<'EOT'\
XDG_CURRENT_DESKTOP=Hyprland\
XDG_SESSION_TYPE=wayland\
GDK_BACKEND=wayland,x11\
QT_QPA_PLATFORM=wayland\
SDL_VIDEODRIVER=wayland\
CLUTTER_BACKEND=wayland\
MOZ_ENABLE_WAYLAND=1\
EOT\
\
# SDDM\
sudo pacman -S --needed --noconfirm sddm\
sudo systemctl enable --now sddm\
\
# ZRAM\
sudo pacman -S --needed --noconfirm zram-generator\
sudo tee /etc/systemd/zram-generator.conf >/dev/null <<'EOT'\
[zram0]\
zram-size = ram / 2\
compression-algorithm = zstd\
swap-priority = 100\
EOT\
sudo systemctl daemon-reload\
# ativa no boot automaticamente; sobe j√ÉÅ:\
sudo systemctl start dev-zram0.swap || sudo systemctl start /dev/zram0.swap || true\
\
echo "‚ÉºÉ¥ base pronta."\
EOF\
chmod +x ~/scripts/install_base.sh
: 1758506622:0;chmod +x ~/dotfiles/scripts/install_base.sh
: 1758506623:0;ls
: 1758506627:0;~/scripts/install_base.sh
: 1758506640:0;~/dotfiles/scripts/install_base.sh
: 1758506650:0;yay -Sy ttf-rubik
: 1758506720:0;cd ..
: 1758506722:0;ls --tree
: 1758506755:0;cd 
: 1758506756:0;cd dotfiles
: 1758506757:0;ls
: 1758506761:0;ls --tree
: 1758508780:0;cd
: 1758508781:0;ls
: 1758509017:0;cat > ~/migrar_para_dotfiles.sh <<'EOF'\
#!/usr/bin/env bash\
set -euo pipefail\
\
DF="$HOME/dotfiles"\
mkdir -p "$DF/config" "$DF/.local/share" "$DF/.local/bin"\
\
# listas (adicione/remova √ÉÄ vontade)\
CFG_INCLUDE=(\
  baloofilerc\
  "Code - OSS"\
  dconf\
  dunst\
  fastfetch\
  fish\
  gtk-3.0\
  gtk-4.0\
  hyde\
  hypr\
  kitty\
  Kvantum\
  menus\
  nwg-look\
  oh-my-posh\
  qt5ct\
  qt6ct\
  rofi\
  spicetify\
  starship\
  systemd\
  tmux\
  vim\
  waybar\
  wlogout\
  xsettingsd\
  zsh\
)\
# excluir backups/arquivos volumosos do HyDE\
CFG_EXCLUDES=(\
  "--exclude=cfg_backups/"\
  "--exclude=themes/*/wallpapers/*.gif"\
)\
\
# 1) copiar itens do ~/.config que AINDA n√£o s√£o symlink\
for name in "${CFG_INCLUDE[@]}"; do\
  src="$HOME/.config/$name"\
  dst="$DF/config/$name"\
  [ -L "$src" ] && { echo "skip symlink ~/.config/$name"; continue; }\
  [ ! -e "$src" ] && { echo "skip ausente ~/.config/$name"; continue; }\
  mkdir -p "$(dirname "$dst")"\
  rsync -a --delete "${CFG_EXCLUDES[@]}" "$src/" "$dst/" || true\
  echo "copiado: $name"\
done\
\
# 2) .local (fonts, themes, icons, bin)\
mkdir -p "$DF/.local/share/fonts" "$DF/.local/share/themes" "$DF/.local/share/icons"\
for path in "$HOME/.local/share/fonts" "$HOME/.local/share/themes" "$HOME/.local/share/icons"; do\
  [ -d "$path" ] || continue\
  rsync -a "$path/" "$DF${path#"$HOME"}"/\
done\
# scripts locais\
[ -d "$HOME/.local/bin" ] && rsync -a "$HOME/.local/bin/" "$DF/.local/bin/"\
\
# 3) Firedragon/Firefox chrome (se existir)\
if [ -d "$HOME/.firedragon/chrome" ]; then\
  mkdir -p "$DF/firedragon/chrome"\
  rsync -a "$HOME/.firedragon/chrome/" "$DF/firedragon/chrome/"\
fi\
if compgen -G "$HOME/.mozilla/firefox/*.default*/chrome" > /dev/null; then\
  prof=$(printf "%s\n" "$HOME"/.mozilla/firefox/*.default*/chrome | head -n1)\
  mkdir -p "$DF/firefox/chrome"\
  rsync -a "$prof/" "$DF/firefox/chrome/"\
fi\
\
echo "OK: migra√ß√£o ‚É¶É≤ $DF conclu√≠da."\
echo "Agora execute: ~/linkar_dotfiles.sh"\
EOF\
chmod +x ~/migrar_para_dotfiles.sh
: 1758509020:0;./migrar_para_dotfiles.sh
: 1758509050:0;yay -Sy rsync
: 1758509060:0;./migrar_para_dotfiles.sh
: 1758510145:0;clear
: 1758510147:0;cd
: 1758510149:0;cd .config
: 1758510149:0;ls
: 1758510176:0;cd hypr
: 1758510176:0;ls
: 1758510181:0;nvim workflows.conf
: 1758510195:0;cd ..
: 1758510197:0;cd kitty
: 1758510198:0;ls
: 1758510200:0;nvim kitty.conf
: 1758510223:0;nvim hyde.conf
: 1758511190:0;grep -R "hyde" ~/dotfiles/config/hypr ~/dotfiles/config/waybar ~/dotfiles/config/kitty || true
: 1758511698:0;nvim theme.conf
: 1758511718:0;nvim kitty.conf
: 1758511733:0;ls
: 1758511737:0;cat hyde.conf
: 1758511743:0;rm -rf hy
: 1758511746:0;clear
: 1758511746:0;ls
: 1758511747:0;clear
: 1758511748:0;ls
: 1758511748:0;clear
: 1758511749:0;ls
: 1758511750:0;clear
: 1758511750:0;ls
: 1758511751:0;clear
: 1758511769:0;cd 
: 1758511770:0;ls
: 1758511772:0;cd .config
: 1758511773:0;ls
: 1758511774:0;clear
: 1758511784:0;cd
: 1758511787:0;cd dotfiles/hypr
: 1758511788:0;ls
: 1758511789:0;cd dotfiles
: 1758511790:0;ls
: 1758511792:0;cd config
: 1758511793:0;ls
: 1758511796:0;cd hy
: 1758511799:0;cd hypr
: 1758511800:0;ls
: 1758511803:0;cd themes
: 1758511803:0;ls
: 1758511814:0;grep -R "hyde" ~/dotfiles/config/hypr/themes || true
: 1758511821:0;nvim colors.conf
: 1758511835:0;ls
: 1758511838:0;nvim theme.conf
: 1758511877:0;# HYPR ‚ÄÉ≥

~\/dotfiles\/scripts\/logout.sh/' ~/.config/hypr/keybindings.conf\

~\/dotfiles\/scripts\/waybar-toggle.sh/' ~/.config/hypr/keybindings.conf\

~\/dotfiles\/scripts\/pypr-toggle-console.sh/' ~/.config/hypr/keybindings.conf\
\
# HYPR ‚ÄÉ≥ parar de incluir arquivos do HyDE\
sed -i 's#^source *= .*hyde.*##' ~/.config/hypr/hyprlock.conf\
sed -i 's#hyde/wallbash#wallbash#g' ~/.config/hypr/shaders.conf ~/.config/hypr/themes/wallbash.conf\
sed -i 's#hyde/themes#themes#g' ~/.config/hypr/themes/*.conf 2>/dev/null || true\
sed -i 's#^\s*#? Read https://hydeproject.*##' ~/.config/hypr/hyprland.conf\
\
# WAYBAR ‚ÄÉ≥ remover m√≥dulos/estilos do HyDE\
sed -i '/custom-hyde-menu/d;/custom\/hyde-menu/d' ~/.config/waybar/config.jsonc\

sed -i 's#"/home/.*/\.local/share/waybar/modules/custom-.*hyde.*",##' ~/.config/waybar/includes/includes.json\
\
# HYPRLOCK ‚ÄÉ≥ se ainda tiver fonte externa\
sed -i 's#^source *= .*/hyde/.*##' ~/.config/hypr/hyprlock.conf\

: 1758511908:0;mkdir -p ~/dotfiles/scripts\
cat > ~/dotfiles/scripts/logout.sh <<'EOF'\
#!/usr/bin/env bash\
# fecha sess√£o Hyprland\
hyprctl dispatch exit || loginctl terminate-user "$USER"\
EOF\
\
cat > ~/dotfiles/scripts/waybar-toggle.sh <<'EOF'\
#!/usr/bin/env bash\
if pgrep -x waybar >/dev/null; then\
  pkill -SIGTERM waybar\
else\
  nohup waybar >/dev/null 2>&1 &\
fi\
EOF\
\
cat > ~/dotfiles/scripts/pypr-toggle-console.sh <<'EOF'\
#!/usr/bin/env bash\
if command -v pypr >/dev/null 2>&1; then\
  pypr toggle console\
else\
  # fallback: scratchpad com kitty\
  hyprctl dispatch exec "[workspace special:scratchpad silent] kitty --class dropterm"\
  hyprctl dispatch togglespecialworkspace\
fi\
EOF\
\
cat > ~/dotfiles/scripts/lockscreen.sh <<'EOF'\
#!/usr/bin/env bash\
# lock b√ÉÅsico\
exec hyprlock\
EOF\
chmod +x ~/dotfiles/scripts/*.sh\

: 1758513371:0;# 1) pasta no repo\
mkdir -p ~/dotfiles/wallpapers/{_flat,manifests}\
\
# 2) coletor: varre HyDE, kitty, hyprlock e qualquer .png/.jpg/.jpeg/.webp no ~/.config\
cat > ~/dotfiles/scripts/collect_wallpapers.sh <<'EOF'\
#!/usr/bin/env bash\
set -euo pipefail\
SRC_DIRS=(\
  "$HOME/.config/hyde/themes"              # HyDE (todas as cole√ß√µes)\
  "$HOME/.config/kitty"                    # kitty backgrounds\
  "$HOME/.config/hypr"                     # hyprlock wall e afins\
)\
DEST="$HOME/dotfiles/wallpapers/_flat"\
TMP="$(mktemp -d)"\
trap 'rm -rf "$TMP"' EXIT\
\
shopt -s nullglob globstar\
\
# 2.1 copiar tudo que for imagem das fontes acima\
for d in "${SRC_DIRS[@]}"; do\
  [ -d "$d" ] || continue\
  while IFS= read -r -d '' f; do\
    cp -n "$f" "$TMP/" 2>/dev/null || true\
  done < <(find "$d" -type f \( -iname '*.png' -o -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.webp' \) -print0)\
done\
\
# 2.2 resolver symlinks wall.set / wall.hyprlock.png do HyDE (se existirem)\
while IFS= read -r -d '' setfile; do\
  tgt="$(readlink -f "$setfile" || true)"\
  [ -f "$tgt" ] && cp -n "$tgt" "$TMP/" || true\
done < <(find "$HOME/.config/hyde/themes" -type l \( -name 'wall.set' -o -name 'wall.hyprlock.png' \) -print0 2>/dev/null || true)\
\
mkdir -p "$DEST"\
\
# 2.3 deduplicar por SHA256 e salvar com nome est√ÉÅvel (hash.ext)\
for img in "$TMP"/*; do\
  [ -f "$img" ] || continue\
  ext="${img##*.}"; ext="${ext,,}"\
  hash="$(sha256sum "$img" | awk '{print $1}')"\
  out="$DEST/$hash.$ext"\
  [ -e "$out" ] || cp "$img" "$out"\
done\
\
echo "OK: $(ls -1 "$DEST" | wc -l) imagens em $DEST"\
EOF\
chmod +x ~/dotfiles/scripts/collect_wallpapers.sh\
~/dotfiles/scripts/collect_wallpapers.sh\

: 1758513376:0;ls
: 1758513378:0;cd ..
: 1758513380:0;ls
: 1758513381:0;cd ..
: 1758513382:0;cd wallpapers
: 1758513383:0;ls
: 1758513385:0;cd _flat
: 1758513386:0;ls
: 1758513388:0;clear
: 1758513389:0;thunar .
: 1758513431:0;# 3) symlink para o sistema usar sempre as imagens do repo\
mkdir -p ~/.local/share\
ln -sfn ~/dotfiles/wallpapers ~/.local/share/wallpapers\
\
# 4) (opcional) ‚ÄÉºcole√ß√µes‚ÄÉΩ nomeadas que apontam para o _flat (voc√™ escolhe quais)\
mkdir -p ~/dotfiles/wallpapers/{Vanta-Black,Decay-Green,Bad-Blood,Edge-Runner}\
# exemplo de alias: pegue 10 imagens do flat e aponte\
cd ~/dotfiles/wallpapers/Vanta-Black\
for f in $(ls ../_flat | head -n 10); do ln -sfn ../_flat/$f .; done\

: 1758513453:0;# 5) manifest + downloader (para pap√©is que voc√™ quer baixar da web sem inflar o repo)\
cat > ~/dotfiles/wallpapers/manifests/manifest.txt <<'EOF'\
# Formato: URL -> nome.ext\
# https://exemplo.com/wall/vanta-abstract.jpg -> vanta-abstract.jpg\
# https://exemplo.com/wall/decay-arcade.png   -> decay-arcade.png\
EOF\
\
cat > ~/dotfiles/scripts/wallpapers-sync.sh <<'EOF'\
#!/usr/bin/env bash\
set -euo pipefail\
dest="$HOME/dotfiles/wallpapers/_flat"\
man="$HOME/dotfiles/wallpapers/manifests/manifest.txt"\
mkdir -p "$dest"\
while IFS= read -r line; do\
  [[ -z "$line" || "$line" =~ ^# ]] && continue\
  url="${line%% -> *}"; name="${line##* -> }"\
  tmp="$(mktemp)"\
  echo "baixando $name ..."\
  curl -fsSL "$url" -o "$tmp"\
  ext="${name##*.}"; ext="${ext,,}"\
  hash="$(sha256sum "$tmp" | awk '{print $1}')"\
  out="$dest/$hash.$ext"\
  mv -f "$tmp" "$out"\
done < "$man"\
echo "OK: baixados para $dest"\
EOF\
chmod +x ~/dotfiles/scripts/wallpapers-sync.sh\

: 1758513464:0;ls
: 1758513468:0;cd ..
: 1758513469:0;ls
: 1758513472:0;cd Bad-Blood
: 1758513473:0;ls
: 1758513474:0;ls -a
: 1758513477:0;cd
: 1758513479:0;cd hypr
: 1758513482:0;cd HyDE
: 1758513483:0;ls
: 1758513485:0;cd Scripts
: 1758513485:0;ls
: 1758513498:0;./themepatcher.sh 'Bad Blood'
: 1758513531:0;./themepatcher.sh 'Bad Blood'  https://github.com/HyDE-Project/hyde-gallery/tree/Bad-Blood
: 1758513575:0;./themepatcher.sh 'Hack The Box' https://github.com/HyDE-Project/hyde-gallery/tree/Hack-the-Box
: 1758513601:0;./themepatcher.sh 'Hackthebox' https://github.com/HyDE-Project/hyde-gallery/tree/Hack-the-Box
: 1758513727:0;cd
: 1758513729:0;cd dotfiles
: 1758513729:0;ls
: 1758513731:0;cd .local
: 1758513732:0;ls
: 1758513736:0;pwd
: 1758513741:0;cd ..
: 1758513742:0;ls -a
: 1758513789:0;clear
: 1758515246:0;mkdir -p ~/dotfiles/scripts ~/dotfiles/.local/share/{icons,themes,cursors} ~/dotfiles/wallpapers/Hack-the-Box ~/dotfiles/config/themes/Hack-the-Box\
\
cat > ~/dotfiles/scripts/import_gallery_theme.sh <<'EOF'\
#!/usr/bin/env bash\
set -euo pipefail\
\
THEME="Hack-the-Box"\
REMOTE="https://github.com/HyDE-Project/hyde-gallery.git"\

SPARSE_PATH="Hack-the-Box"\
\
# clone esparso (somente a pasta do tema)\
rm -rf "$GDIR"\
git clone --depth 1 --filter=blob:none --sparse "$REMOTE" "$GDIR"\
git -C "$GDIR" sparse-checkout set "$SPARSE_PATH"\
\
SRC="$GDIR/$SPARSE_PATH"\
\
# 1) extrair pacotes de √≠cones/gtk/cursor para o seu repo\
find "$SRC/Source" -maxdepth 1 -type f -name '*.tar.gz' 2>/dev/null | while read -r tgz; do\
  base="$(basename "$tgz")"\
  case "$base" in\
    Icon_*.tar.gz)\
      tar -xzf "$tgz" -C "$HOME/dotfiles/.local/share/icons"\
      ;;\
    Gtk_*.tar.gz|GTK_*.tar.gz)\
      tar -xzf "$tgz" -C "$HOME/dotfiles/.local/share/themes"\
      ;;\
    Cursor_*.tar.gz|Cursors_*.tar.gz)\
      mkdir -p "$HOME/dotfiles/.local/share/icons"\
      tar -xzf "$tgz" -C "$HOME/dotfiles/.local/share/icons"\
      ;;\
    *)\
      # caso o tema traga algo extra (Kvantum etc)\
      tar -tzf "$tgz" | head -n1 | grep -qi kvantum && {\
        mkdir -p "$HOME/dotfiles/.local/share/Kvantum"\
        tar -xzf "$tgz" -C "$HOME/dotfiles/.local/share/Kvantum"\
      } || true\
      ;;\
  esac\
done\
\
# 2) wallpapers do tema (se houverem)\
if [ -d "$SRC/wallpapers" ]; then\
  rsync -a --delete "$SRC/wallpapers/" "$HOME/dotfiles/wallpapers/Hack-the-Box/"\
fi\
\
# 3) snippets de tema (kitty/hypr/waybar/kvantum etc) ‚É¶É≤ versionados no repo\
for f in hypr.theme kitty.theme rofi.theme waybar.theme theme.dcol; do\
  [ -f "$SRC/$f" ] && cp -f "$SRC/$f" "$HOME/dotfiles/config/themes/Hack-the-Box/$f"\
done\
# Kvantum\
if [ -d "$SRC/kvantum" ]; then\
  mkdir -p "$HOME/dotfiles/config/themes/Hack-the-Box/kvantum"\
  cp -f "$SRC/kvantum/"* "$HOME/dotfiles/config/themes/Hack-the-Box/kvantum/"\
fi\
\
echo "‚ÉºÉ¥ Tema '$THEME' importado para ~/dotfiles (.local/share + wallpapers + snippets)."\
EOF\
chmod +x ~/dotfiles/scripts/import_gallery_theme.sh\
~/dotfiles/scripts/import_gallery_theme.sh\

: 1758515459:0;ls
: 1758515473:0;cd .local/share/
: 1758515474:0;ls
: 1758515481:0;cd icons
: 1758515481:0;ls
: 1758515489:0;cd ..
: 1758515490:0;ls
: 1758515494:0;cd cursors
: 1758515494:0;ls
: 1758515496:0;cd ..
: 1758516547:0;mkdir -p ~/dotfiles/scripts ~/dotfiles/.local/share/{icons,themes,cursors,Kvantum} \\
         ~/dotfiles/wallpapers ~/dotfiles/config/themes\
\
cat > ~/dotfiles/scripts/import_gallery_theme.sh <<'EOF'\
#!/usr/bin/env bash\
set -euo pipefail\
NAME="${1:-Hack-the-Box}"   # ex: Hack-the-Box | Vanta-Black | Bad-Blood\
REMOTE="https://github.com/HyDE-Project/hyde-gallery.git"\

rm -rf "$WD"\
git clone --depth 1 --filter=blob:none --sparse "$REMOTE" "$WD"\
git -C "$WD" sparse-checkout set "$NAME"\
\
SRC="$WD/$NAME"\
# extrai pacotes (Icon_*.tar.gz, Gtk_*.tar.gz, Cursor_*.tar.gz, Kvantum etc.)\
if [ -d "$SRC/Source" ]; then\
  for tgz in "$SRC/Source/"*.tar.gz 2>/dev/null; do\
    [ -e "$tgz" ] || continue\
    b="$(basename "$tgz")"\
    case "$b" in\
      Icon_*.tar.gz)   tar -xzf "$tgz" -C "$HOME/dotfiles/.local/share/icons"   ;;\
      Gtk_*|GTK_*.tar.gz)\
                       tar -xzf "$tgz" -C "$HOME/dotfiles/.local/share/themes"  ;;\
      Cursor_*|Cursors_*.tar.gz)\
                       tar -xzf "$tgz" -C "$HOME/dotfiles/.local/share/icons"   ;;\
      *) # Kvantum, etc.\
         if tar -tzf "$tgz" | grep -qi '^Kvantum/'; then\
           tar -xzf "$tgz" -C "$HOME/dotfiles/.local/share"\
         else\
           tar -xzf "$tgz" -C "$HOME/dotfiles/.local/share/themes"\
         fi\
      ;;\
    esac\
  done\
fi\
# wallpapers\
if [ -d "$SRC/wallpapers" ]; then\
  mkdir -p "$HOME/dotfiles/wallpapers/$NAME"\
  rsync -a --delete "$SRC/wallpapers/" "$HOME/dotfiles/wallpapers/$NAME/"\
fi\
# snippets (kitty/hypr/waybar/kvantum)\
DST="$HOME/dotfiles/config/themes/$NAME"\
mkdir -p "$DST"\
for f in hypr.theme kitty.theme rofi.theme waybar.theme theme.dcol; do\
  [ -f "$SRC/$f" ] && cp -f "$SRC/$f" "$DST/"\
done\
[ -d "$SRC/kvantum" ] && { mkdir -p "$DST/kvantum"; cp -f "$SRC/kvantum/"* "$DST/kvantum/"; }\
\
echo "‚ÉºÉ¥ Gallery: '$NAME' importado."\
EOF\
chmod +x ~/dotfiles/scripts/import_gallery_theme.sh\
\
# exemplo:\
~/dotfiles/scripts/import_gallery_theme.sh Hack-the-Box\
~/dotfiles/scripts/import_gallery_theme.sh Vanta-Black\
~/dotfiles/scripts/import_gallery_theme.sh Bad-Blood\

: 1758516565:0;cat > ~/dotfiles/scripts/import_dr460nized.sh <<'EOF'\
#!/usr/bin/env bash\
set -euo pipefail\
REMOTE="https://gitlab.com/garuda-linux/themes-and-settings/settings/garuda-dr460nized.git"\
WD="$HOME/.cache/dr460nized"\
rm -rf "$WD"\
git clone --depth 1 "$REMOTE" "$WD"\
\
# tenta coletar assets t√≠picos em usr/share/{icons,themes,wallpapers,Kvantum}\
for dir in icons themes backgrounds wallpapers Kvantum; do\
  if [ -d "$WD/usr/share/$dir" ]; then\
    case "$dir" in\
      backgrounds|wallpapers)\
        mkdir -p "$HOME/dotfiles/wallpapers/dr460nized"\
        rsync -a "$WD/usr/share/$dir/" "$HOME/dotfiles/wallpapers/dr460nized/"\
        ;;\
      *)\
        mkdir -p "$HOME/dotfiles/.local/share/$dir"\
        rsync -a "$WD/usr/share/$dir/" "$HOME/dotfiles/.local/share/$dir/"\
        ;;\
    esac\
  fi\
done\
\
# snippets (se houver temas .conf/.css etc no repo)\
DST="$HOME/dotfiles/config/themes/dr460nized"\
mkdir -p "$DST"\
find "$WD" -maxdepth 3 -type f \( -name '*kitty*theme*' -o -name '*hypr*theme*' -o -name '*waybar*theme*' -o -name '*.kvconfig' -o -name '*.svg' \) -print -exec cp -f {} "$DST/" \; || true\
\
echo "‚ÉºÉ¥ dr460nized importado."\
EOF\
chmod +x ~/dotfiles/scripts/import_dr460nized.sh\
~/dotfiles/scripts/import_dr460nized.sh\

: 1758516805:0;backup_ts=$(date +%s)\
for d in icons themes cursors Kvantum; do\
  mkdir -p ~/.local/share ~/dotfiles/.local/share/$d\
  [ -e ~/.local/share/$d ] && [ ! -L ~/.local/share/$d ] && mv -v ~/.local/share/$d ~/.local/share/$d.bak.$backup_ts\
  ln -sfn ~/dotfiles/.local/share/$d ~/.local/share/$d\
done\

: 1758517197:0;ls
: 1758517200:0;cd themes
: 1758517200:0;ls
: 1758517239:0;cd ..
: 1758517242:0;ls --tree
: 1758517642:0;bash -c '\
set -euo pipefail\
echo "=== HOST ==="\
uname -a\
echo\
\
echo "=== DOTFILES ROOT ==="\
[ -d "$HOME/dotfiles" ] && echo "$HOME/dotfiles" || echo "N√É£O ENCONTREI ~/dotfiles"\
echo\
\
echo "=== THEMES/L&F SYMLINKS ==="\
for d in icons themes cursors Kvantum; do\
  p="$HOME/.local/share/$d"\
  printf "%-10s -> " "$d"\
  if [ -L "$p" ]; then readlink -f "$p"; else echo "(n√£o √© symlink)"; fi\
done\
echo\
\
echo "=== .local/share (top-level) ==="\
for d in icons themes cursors Kvantum; do\
  base="$HOME/dotfiles/.local/share/$d"\
  if [ -d "$base" ]; then\
    echo "[$d] $base:"\
    find "$base" -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | sort | head -n 50\
  else\
    echo "[$d] $base (faltando)"\
  fi\
done\
echo\
\
echo "=== WALPAPERS ==="\
if [ -d "$HOME/dotfiles/wallpapers" ]; then\
  find "$HOME/dotfiles/wallpapers" -maxdepth 2 -type f | wc -l | xargs -I{} echo "Total: {}"\
  find "$HOME/dotfiles/wallpapers" -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | sort\
else\
  echo "Sem ~/dotfiles/wallpapers"\
fi\
echo\
\
echo "=== HYPR BASE (includes & refs HyDE) ==="\
cfg="$HOME/.config/hypr"\
if [ -d "$cfg" ]; then\
  echo "- includes em hyprland.conf:"\
  grep -nE "^(source|include)" "$cfg/hyprland.conf" 2>/dev/null || true\
  echo\


  echo\
  echo "- tema apontado em $cfg/themes/theme.conf:"\
  [ -f "$cfg/themes/theme.conf" ] && sed -n "1,80p" "$cfg/themes/theme.conf" || echo "(arquivo ausente)"\
else\
  echo "Sem ~/.config/hypr"\
fi\
echo\
\
echo "=== KITTY (includes & tema) ==="\
k="$HOME/.config/kitty"\
if [ -d "$k" ]; then\
  echo "- kitty.conf includes:"\
  grep -nE "^(include|map|font_|background|wayland_)" "$k/kitty.conf" 2>/dev/null || true\
  echo\
  echo "- theme.conf head:"\
  [ -f "$k/theme.conf" ] && sed -n "1,80p" "$k/theme.conf" | sed "s/.*/    &/" || echo "(sem theme.conf)"\
else\
  echo "Sem ~/.config/kitty"\
fi\
echo\
\
echo "=== WAYBAR (includes & tema) ==="\
w="$HOME/.config/waybar"\
if [ -d "$w" ]; then\
  echo "- includes.json:"\
  [ -f "$w/includes/includes.json" ] && sed -n "1,120p" "$w/includes/includes.json" || echo "(sem includes.json)"\
  echo\
  echo "- theme.css head:"\
  [ -f "$w/theme.css" ] && sed -n "1,60p" "$w/theme.css" | sed "s/.*/    &/" || echo "(sem theme.css)"\
else\
  echo "Sem ~/.config/waybar"\
fi\
echo\
\
echo "=== KVANTUM PERFIL ==="\
if [ -f "$HOME/.config/Kvantum/kvantum.kvconfig" ]; then\
  sed -n "1,80p" "$HOME/.config/Kvantum/kvantum.kvconfig"\
else\
  echo "Sem Kvantum config"\
fi\
echo\
\
echo "=== ZSH (bootstrap/prompt) ==="\
z="$HOME/dotfiles/config/zsh"\
if [ -d "$z" ]; then\
  echo "- modules:"\
  ls -1 "$z/modules" 2>/dev/null | sed "s/^/    /" || true\
  echo "- prompt files:"\
  ls -1 "$z" | grep -E "prompt|plugin|zshenv" | sed "s/^/    /" || true\
else\
  echo "Sem dotfiles/config/zsh"\
fi\
echo\
\
echo "=== NVIM (base tiny) ==="\
if [ -d "$HOME/dotfiles/config/nvim" ]; then\
  echo "OK ~/dotfiles/config/nvim"\
else\
  echo "Sem nvim nos dotfiles"\
fi\
echo\
\
echo \"=== DR460NIZED CACHE (se baixou) ===\"\
[ -d \"$HOME/.cache/dr460nized\" ] && ls -1 \"$HOME/.cache/dr460nized\" | sed \"s/^/    /\" || echo \"(sem .cache/dr460nized)\"\
'\

: 1758517656:0;cd
: 1758517660:0;nvim script.sh
: 1758517671:0;./script.sh
: 1758517685:0;chmod ./script.sh
: 1758517689:0;chmod +x ./script.sh
: 1758517692:0;./script.sh
: 1758518801:0;htop
: 1758519328:0;sudo pacman -S --needed git rsync jq yq awk ripgrep curl unzip \\
  xdg-user-dirs xdg-desktop-portal xdg-desktop-portal-gtk \\
  kitty waybar hyprland hypridle hyprlock wofi mako grim slurp wl-clipboard \\
  kvantum kvantum-qt5 qt5ct qt6ct \\
  ttf-jetbrains-mono-nerd noto-fonts noto-fonts-emoji \\
  gamemode gamescope mangohud protontricks \\
  pavucontrol blueman fastfetch --noconfirm\

: 1758519746:0;cd dotfiles
: 1758519747:0;ls
: 1758520135:0;# importa s√≥ dr460nized para dentro do seu repo\
cache="${XDG_CACHE_HOME:-$HOME/.cache}"\
dst="$HOME/dotfiles/.local/share"\
mkdir -p "$cache" "$dst"/{themes,icons,Kvantum,wallpapers}\
if [ -d "$cache/dr460nized" ]; then\
  git -C "$cache/dr460nized" pull -q\
else\
  git clone -q --depth 1 https://gitlab.com/garuda-linux/themes-and-settings/settings/garuda-dr460nized "$cache/dr460nized"\
fi\
\
rsync -a "$cache/dr460nized/Kvantum/"    "$dst/Kvantum/"\
rsync -a "$cache/dr460nized/themes/"     "$dst/themes/"\
rsync -a "$cache/dr460nized/icons/"      "$dst/icons/"\
rsync -a "$cache/dr460nized/wallpapers/" "$dst/wallpapers/dr460nized/"\
echo "dr460nized ‚É¶É≤ ~/dotfiles/.local/share ‚ÉºÉ¥"\

: 1758520354:0;#!/usr/bin/env bash\
set -euo pipefail\
\
cache="${XDG_CACHE_HOME:-$HOME/.cache}"\
repo="$cache/dr460nized"\
dst="$HOME/dotfiles/.local/share"\
\
mkdir -p "$dst"/{themes,icons,Kvantum,wallpapers/dr460nized}\
\
# clone/atualiza\
if [[ -d "$repo/.git" ]]; then\
  git -C "$repo" pull -q\
else\
  git clone -q --depth=1 https://gitlab.com/garuda-linux/themes-and-settings/settings/garuda-dr460nized "$repo"\
fi\
\
# 1) KVANTUM (qualquer pasta chamada Kvantum/kvantum)\
while IFS= read -r -d '' kdir; do\
  rsync -a --delete "$kdir"/ "$dst/Kvantum/"\
done < <(find "$repo" -type d -iname kvantum -print0 || true)\
\
# 2) GTK THEMES (pastas que contenham gtk-3.0 ou gtk-4.0 + index.theme)\
while IFS= read -r -d '' troot; do\
  name="$(basename "$troot")"\
  rsync -a "$troot"/ "$dst/themes/$name"/\
done < <(\
  find "$repo" -type d \( -name gtk-3.0 -o -name gtk-4.0 \) -print0 |\
  xargs -0 -I{} dirname {} | sort -u -z\
)\
\
# 3) ICON THEMES (pastas com index.theme e subpastas de √≠cones)\
while IFS= read -r -d '' itheme; do\
  name="$(basename "$itheme")"\
  rsync -a "$itheme"/ "$dst/icons/$name"/\
done < <(\
  find "$repo" -type f -name index.theme -print0 |\
  xargs -0 -I{} dirname {} | sort -u -z\
)\
\
# 4) WALLPAPERS (todas imagens)\
tmpwp="$(mktemp -d)"\
find "$repo" -type f \( -iname '*.png' -o -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.webp' \) -print0 \\
  | rsync -a --files-from=- --from0 / "$dst/wallpapers/dr460nized/" 2>/dev/null || true\
\
echo "‚ÉºÉ¥ dr460nized importado p/ $dst"\

: 1758520882:0;#!/usr/bin/env bash\
set -euo pipefail\
\
HDR(){ printf "\n=== %s ===\n" "$*"; }\
OK(){ printf "‚ÉºÉ¥ %s\n" "$*"; }\
WARN(){ printf "‚É∫ÉÄ %s\n" "$*"; }\
ERR(){ printf "‚ÉºÉ∂ %s\n" "$*"; }\
\
DF="${DF_ROOT:-$HOME/dotfiles}"\
\
HDR "HOST"\
uname -a\
\
HDR "DOTFILES ROOT"\
echo "$DF"\
[ -d "$DF" ] || { ERR "dotfiles ausente"; exit 1; }\
\
HDR "SYMLINKS L&F (.local/share)"\
for d in icons themes cursors Kvantum; do\
  tgt="$HOME/.local/share/$d"\
  echo -n "$d -> "\
  if [ -L "$tgt" ]; then readlink -f "$tgt"; else WARN "n√£o √© symlink"; fi\
done\
\
HDR ".local/share conte√∫dos (top-level)"\
for d in icons themes cursors Kvantum; do\
  p="$DF/.local/share/$d"\
  if [ -d "$p" ]; then\
    echo "[$d] $(ls -1 "$p" | wc -l) entradas"\
    ls -1 "$p" | head -n 25\
    [ "$(ls -1 "$p" | wc -l)" -gt 25 ] && echo "‚Ä¶"\
  else WARN "$p faltando"; fi\
done\
\
HDR "WALLPAPERS"\
WP="$HOME/wallpapers"\
echo -n "link ~/wallpapers -> "; [ -L "$WP" ] && readlink -f "$WP" || WARN "sem link"\
[ -d "$DF/wallpapers" ] && find "$DF/wallpapers" -maxdepth 1 -type f | wc -l | xargs -I{} echo "Total: {}"\
\
HDR "HYPR (includes & refs HyDE)"\
HCFG="$HOME/.config/hypr"\
grep -nE 'source = \./(keybindings|windowrules|monitors|userprefs)\.conf' "$HCFG/hyprland.conf" || WARN "includes base n√£o encontrados"\

\
HDR "HYPR THEME SNAPSHOT"\
THEME="$HCFG/themes/theme.conf"\
if [ -f "$THEME" ]; then\
  awk 'NR<=80{print}' "$THEME"\
else WARN "theme.conf n√£o encontrado"; fi\
\
HDR "WAYBAR"\
WCFG="$HOME/.config/waybar"\
[ -f "$WCFG/config.jsonc" ] || WARN "config.jsonc ausente"\
[ -f "$WCFG/theme.css" ] || WARN "theme.css ausente"\

INC="$WCFG/includes/includes.json"\
[ -f "$INC" ] && jq -r '.include[]?' "$INC" 2>/dev/null | sed 's|^|include: |' || true\
\
HDR "KVANTUM"\
KV="$HOME/.config/Kvantum/kvantum.kvconfig"\
if [ -f "$KV" ]; then\
  awk '/^\[General\]/{f=1} f && NR<=20{print}' "$KV"\
  theme=$(awk -F= '/^theme=/{print $2}' "$KV" | tr -d '\r')\
  [ -n "${theme:-}" ] && [ -d "$HOME/.local/share/Kvantum/$theme" ] && OK "Tema Kvantum ok: $theme" || WARN "Tema Kvantum inv√ÉÅlido"\
else WARN "kvantum.kvconfig ausente"; fi\
\
HDR "GTK/XSETTINGSD"\
XS="$HOME/.config/xsettingsd/xsettingsd.conf"\
if [ -f "$XS" ]; then\
  cat "$XS"\
  gtk=$(awk -F\" '/Gtk\/ThemeName/{print $2}' "$XS"); ico=$(awk -F\" '/Net\/IconThemeName/{print $2}' "$XS")\
  cur=$(awk -F\" '/Gtk\/CursorThemeName/{print $2}' "$XS")\
  [ -d "$HOME/.local/share/themes/$gtk" ] && OK "GTK ok: $gtk" || WARN "GTK theme faltando: $gtk"\
  [ -d "$HOME/.local/share/icons/$ico" ] && OK "Icon ok: $ico" || WARN "Icon faltando: $ico"\
  [ -d "$HOME/.local/share/icons/$cur" ] && OK "Cursor ok: $cur" || WARN "Cursor faltando: $cur"\
else WARN "xsettingsd.conf ausente"; fi\
\
HDR "KITTY"\
KC="$HOME/.config/kitty/kitty.conf"\
[ -f "$KC" ] && { grep -n '^include .*theme\.conf' "$KC" || WARN "kitty sem include theme.conf"; grep -n '^font_size' "$KC" || true; } || WARN "kitty.conf ausente"\
\
HDR "PACOTES-CHAVE"\
need=(hyprland waybar swww xdg-desktop-portal xdg-desktop-portal-gtk xdg-desktop-portal-hyprland mako wl-clipboard grim slurp steam gamemode gamescope mangohud protontricks kitty kvantum-qt5 kvantum-qt6 qt6ct qt5ct)\
for p in "${need[@]}"; do pacman -Q "$p" &>/dev/null && echo "ok: $p" || echo "miss: $p"; done\
\
HDR "SERVI√ÉßOS"\
systemctl --user is-active xdg-desktop-portal && OK "xdg-desktop-portal (user) ativo" || WARN "portal (user) inativo"\
systemctl --user is-active xdg-desktop-portal-hyprland && OK "portal-hyprland ativo" || WARN "portal-hyprland inativo"\
systemctl is-enabled sddm &>/dev/null && OK "sddm habilitado" || WARN "sddm n√£o habilitado"\
\
HDR "ZRAM / SWAP"\
swapon --show || true\
lsblk -o NAME,TYPE,SIZE,MOUNTPOINT | awk '/zram/ || NR==1{print}'\
journalctl -b -u 'zram*' --no-pager -n 20 2>/dev/null || true\
\
HDR "GAMING"\
systemctl is-active gamemoded &>/dev/null && OK "gamemoded ativo" || WARN "gamemoded inativo"\
command -v protontricks >/dev/null && OK "protontricks ok" || WARN "protontricks faltando"\
[ -d "$HOME/.steam" ] || [ -d "$HOME/.local/share/Steam" ] && OK "Steam presente" || WARN "Steam n√£o inicializado"\
\
HDR "MISE / DEV"\
if command -v mise >/dev/null; then\
  OK "mise instalado: $(mise --version)"\
  grep -R "mise activate" "$HOME/.config/zsh/zshenv" >/dev/null && OK "zsh integra mise" || WARN "zshenv sem mise activate"\
else WARN "mise n√£o encontrado"; fi\
\
HDR "NVIM"\
command -v nvim >/dev/null && { nvim --version | head -n1; [ -d "$HOME/.config/nvim" ] && OK "nvim config presente"; } || WARN "nvim ausente"\
\
HDR "DUPLICATAS vs SYMLINKS (.config)"\
while IFS= read -r d; do\
  base="$(basename "$d")"\
  tgt="$HOME/.config/$base"\
  [ -e "$tgt" ] && [ ! -L "$tgt" ] && WARN "~/.config/$base n√£o √© symlink (pode conflitar)"\
done < <(find "$DF/config" -mindepth 1 -maxdepth 1 -type d)\
\
HDR "GIT STATUS (dotfiles)"\
git -C "$DF" rev-parse --is-inside-work-tree &>/dev/null && git -C "$DF" status -s || WARN "repo git n√£o inicializado"\
\
HDR "FIM"\

: 1758520902:0;chmod +x ~/dotfiles/scripts/90_audit.sh\
~/dotfiles/scripts/90_audit.sh | tee ~/dotfiles/_audit_$(date +%s).log
: 1758520909:0;ls
: 1758520921:0;cd dotfiles/scripts
: 1758520929:0;nvim 90_audit.sh
: 1758520935:0;chmod +x ~/dotfiles/scripts/90_audit.sh
: 1758520940:0;~/dotfiles/scripts/90_audit.sh | tee ~/dotfiles/_audit_$(date +%s).log
: 1758520943:0;cd ..
: 1758520944:0;ls
: 1758521171:0;# 1. remover bin√ÉÅrios soltos e diret√≥rio hyde trazido p/ repo\

rm -rf ~/dotfiles/config/hyde\
rm -f  ~/dotfiles/config/kitty/hyde.conf\
\



\
# 3. waybar: retirar includes custom do HyDE e imports para gtk.css do HyDE\
sed -i '/custom\/hyde-menu/d;/custom-github_hyde/d' ~/dotfiles/config/waybar/config.jsonc\
sed -i '/\.cache\/hyde\/wallbash\/gtk\.css/d'      ~/dotfiles/config/waybar/style.css\
\
# 4. hypr: garantir includes ‚ÄÉºpuros‚ÄÉΩ\
awk 'BEGIN{p=1} {print} END{}' ~/dotfiles/config/hypr/hyprland.conf | sed -e '1i\\
source=~/.config/hypr/keybindings.conf\nsource=~/.config/hypr/windowrules.conf\nsource=~/.config/hypr/animations.conf\nsource=~/.config/hypr/themes/theme.conf' \\
> ~/dotfiles/config/hypr/hyprland.conf.tmp && mv ~/dotfiles/config/hypr/hyprland.conf.tmp ~/dotfiles/config/hypr/hyprland.conf\

: 1758521187:0;cache="${XDG_CACHE_HOME:-$HOME/.cache}"\
dst="$HOME/dotfiles/.local/share"\
mkdir -p "$cache" "$dst"/{themes,icons,cursors,Kvantum,wallpapers}\
\
if [ -d "$cache/dr460nized" ]; then\
  git -C "$cache/dr460nized" pull -q\
else\
  git clone -q --depth 1 https://gitlab.com/garuda-linux/themes-and-settings/settings/garuda-dr460nized "$cache/dr460nized"\
fi\
\
# mapeia subpastas reais do projeto\
rsync -a "$cache/dr460nized/gtk/"       "$dst/themes/"      2>/dev/null || true\
rsync -a "$cache/dr460nized/icons/"     "$dst/icons/"       2>/dev/null || true\
rsync -a "$cache/dr460nized/cursors/"   "$dst/cursors/"     2>/dev/null || true\
rsync -a "$cache/dr460nized/Kvantum/"   "$dst/Kvantum/"     2>/dev/null || true\
rsync -a "$cache/dr460nized/wallpapers/" "$dst/wallpapers/dr460nized/" 2>/dev/null || true\

: 1758521201:0;~/dotfiles/scripts/30_link_dotfiles.sh\

: 1758521220:0;# repo limpo de HyDE?\
! grep -Riq 'hyde-shell\|hydectl\|\.cache/hyde\|\.local/share/hyde' ~/dotfiles && echo "OK: sem refs HyDE"\
\
# hypr includes b√ÉÅsicos existem?\
grep -E 'source=.*(keybindings|windowrules|animations|themes/theme\.conf)' -n ~/dotfiles/config/hypr/hyprland.conf\
\
# waybar sem imports do cache HyDE?\
! grep -q '\.cache/hyde/wallbash/gtk.css' ~/dotfiles/config/waybar/style.css && echo "OK: waybar sem cache HyDE"\

: 1758521489:0;# 1) garantir a pasta\
mkdir -p ~/dotfiles/scripts\
\
# 2) criar ~/dotfiles/scripts/30_link_dotfiles.sh\
cat > ~/dotfiles/scripts/30_link_dotfiles.sh <<'EOF'\
#!/usr/bin/env bash\
set -euo pipefail\
\
DF="$HOME/dotfiles"\
TS="$(date +%s)"\
\
backup_link () {\
  local dst="$1"\
  if [ -e "$dst" ] && [ ! -L "$dst" ]; then\
    mv -v "$dst" "$dst.bak.$TS"\
  fi\
}\
\
echo "[.config] symlinkando pastas do repo"\
mkdir -p "$HOME/.config"\
find "$DF/config" -mindepth 1 -maxdepth 1 -printf "%f\n" | while read -r name; do\
  src="$DF/config/$name"\
  dst="$HOME/.config/$name"\
  backup_link "$dst"\
  ln -sfn "$src" "$dst"\
done\
\
echo "[.local/share] symlinkando assets"\
mkdir -p "$HOME/.local/share"\
for d in icons themes cursors Kvantum; do\
  src="$DF/.local/share/$d"\
  dst="$HOME/.local/share/$d"\
  mkdir -p "$src"\
  backup_link "$dst"\
  ln -sfn "$src" "$dst"\
done\
\
echo "[wallpapers] criando link na HOME"\
src="$DF/wallpapers"\
dst="$HOME/wallpapers"\
mkdir -p "$src"\
backup_link "$dst"\
ln -sfn "$src" "$dst"\
\
echo "OK. symlinks prontos."\
EOF\
\
# 3) tornar execut√ÉÅvel\
chmod +x ~/dotfiles/scripts/30_link_dotfiles.sh\
\
# 4) executar\
~/dotfiles/scripts/30_link_dotfiles.sh\

: 1758521502:0;cd ~/dotfiles\
\
# 0) garantir tudo versionado\
git add -A\
git commit -m "chore: baseline p√≥s-auditoria (HyDE-free, waybar ok)"\
git tag v0.1-audit\
\
# 1) vendorizar temas (Vanta/Decay/HackTheBox/BadBlood/DR460nized)\
chmod +x scripts/10_vendor_themes.sh\
scripts/10_vendor_themes.sh\
git add -A\
git commit -m "feat(theme): vendor GTK/icons/Kvantum + wallpapers (Vanta/Decay/HTB/BadBlood/DR460nized)"\
git tag v0.2-themes\
\
# 2) ‚ÄÉºun-HyDE‚ÄÉΩ (garantia extra) + limpar restos\
chmod +x scripts/20_unhyde.sh\
scripts/20_unhyde.sh\
git add -A\
git commit -m "refactor(hypr/waybar): remover refs HyDE e m√≥dulos custom"\
git tag v0.3-unhyde\
\
# 3) symlinks de dotfiles -> sistema\
chmod +x scripts/30_link_dotfiles.sh\
scripts/30_link_dotfiles.sh\
git add -A\
git commit -m "chore: linkador de dotfiles e assets (.config/.local/share/wallpapers)"\
git tag v0.4-link\
\
# 4) dev stack (mise) + deps nvim\
chmod +x scripts/40_dev_stack.sh\
scripts/40_dev_stack.sh\
git add -A\
git commit -m "feat(dev): mise activate + toolchains base e deps nvim"\
git tag v0.5-dev\
\
# 5) gaming stack\
chmod +x scripts/50_gaming.sh\
scripts/50_gaming.sh\
git add -A\
git commit -m "feat(gaming): steam/gamemode/gamescope/proton-tools"\
git tag v0.6-gaming\

