# ╔══════════════════════════╗
# ║      Hyprland Binds      ║
# ╠══════════════════════════╣
# ║ Terminal: kitty          ║
# ║ Browser: zen-twilight    ║
# ║ Menu: rofi               ║
# ╚══════════════════════════╝

# Variables
$mod = Super
$terminal = app2unit -- kitty
$browser = app2unit -- zen-twilight
$menu = rofi -show run -show-icons -display-run "   run" -run-command "app2unit -- {cmd}"
$calculator = app2unit -- kitty -T qalc -e qalc
$clipboard_manager = app2unit -- kitty -T clipse -e clipse

# Keybinds: Apps
bind = $mod, Return, exec, $terminal
bind = $mod, W, exec, $browser
bind = $mod, P, exec, $menu
bind = $mod, C, exec, $calculator
bind = $mod, V, exec, $clipboard_manager

# Quick menu (example: custom script or app2unit -- quickmenu if exists)
bind = $mod, Escape, exec, app2unit -- quickmenu

# Dunst: Unblock wifi/bluetooth and notify
bind = ,Help, exec, rfkill unblock all && dunstify "wi-fi and bluetooth unblocked"

# Secondary terminal (ex: neovim in terminal)
bind = $mod Shift, Return, exec, app2unit -- kitty -e nvim

# Clipboard manager
bind = $mod Shift, V, exec, $clipboard_manager

# Hyprland window control
binde = $mod, Q, killactive
bind = $mod Shift, Q, exec, kill -9 $(hyprctl activewindow | grep -oP '(?<=pid: )\d+')
bind = $mod, S, togglefloating,
bind = $mod, T, pseudo,
bind = $mod, F, fullscreen
bind = $mod Shift, F, fullscreenstate, 0, 3
bind = $mod, E, togglesplit,
bind = $mod, X, pin,

# Window resize (Alt+Mod+hjkl)
binde = $mod Alt, h, resizeactive, -30 0
binde = $mod Alt, j, resizeactive, 0 30
binde = $mod Alt, k, resizeactive, 0 -30
binde = $mod Alt, l, resizeactive, 30 0

# Move window (Shift+Mod+hjkl)
binde = $mod Shift, h, movewindow, l
binde = $mod Shift, j, movewindow, d
binde = $mod Shift, k, movewindow, u
binde = $mod Shift, l, movewindow, r

# Focus window (Mod+hjkl)
bind = $mod, h, movefocus, l
bind = $mod, j, movefocus, d
bind = $mod, k, movefocus, u
bind = $mod, l, movefocus, r

# Workspaces (Mod+numbers)
bind = $mod, 1, workspace, 1
bind = $mod, 2, workspace, 2
bind = $mod, 3, workspace, 3
bind = $mod, 4, workspace, 4
bind = $mod, 5, workspace, 5
bind = $mod, 6, workspace, 6
bind = $mod, 7, workspace, 7
bind = $mod, 8, workspace, 8
bind = $mod, 9, workspace, 9
bind = $mod, 0, workspace, 10

# Move window to workspace (Mod+Shift+number)
bind = $mod Shift, 1, movetoworkspace, 1
bind = $mod Shift, 2, movetoworkspace, 2
bind = $mod Shift, 3, movetoworkspace, 3
bind = $mod Shift, 4, movetoworkspace, 4
bind = $mod Shift, 5, movetoworkspace, 5
bind = $mod Shift, 6, movetoworkspace, 6
bind = $mod Shift, 7, movetoworkspace, 7
bind = $mod Shift, 8, movetoworkspace, 8
bind = $mod Shift, 9, movetoworkspace, 9
bind = $mod Shift, 0, movetoworkspace, 10

# Workspace navigation (Alt+Tab)
bind = Alt, Tab, workspace, m+1
bind = Alt Shift, Tab, workspace, m-1

# Mouse bindings
bind = $mod, mouse_down, workspace, e+1
bind = $mod, mouse_up, workspace, e-1
bindm = $mod, mouse:272, movewindow
bindm = $mod, mouse:273, resizewindow

# Dunst controls
binde = $mod, Space, exec, dunstctl close

# Shortcuts (replace with your shortcut manager if different)
bind = $mod, b, exec, shortcuts -n
bind = $mod Shift, b, exec, shortcuts -d

# Function Keys (XF86)
binde = ,XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5%
binde = ,XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +5%
bind = $mod, XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ 0%
bind = $mod, XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ 100%
bind = ,XF86AudioMute, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle
binde = ,XF86AudioPlay, exec, playerctl play-pause
bind = ,XF86AudioStop, exec, playerctl stop
binde = ,XF86AudioNext, exec, playerctl next
binde = ,XF86AudioPrev, exec, playerctl previous
binde = ,XF86MonBrightnessUp, exec, brightnessctl set +10%
binde = ,XF86MonBrightnessDown, exec, brightnessctl set 10%-
bind = $mod, XF86MonBrightnessUp, exec, brightnessctl set 100%
bind = $mod, XF86MonBrightnessDown, exec, brightnessctl set 1%
binde = ,XF86AudioMicMute, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle
bind = Alt Shift, S, exec, grimblast copy area
bind = $mod Shift, S, exec, grimblast copy screen
bind = $mod Shift, O, exec, grimblast ocr area
bind = ,Print, exec, grimblast copy screen
bind = $mod&Shift&Alt, S, exec, grimblast copy window
bind = Alt, Print, exec, grimblast copy window
bind = ,XF86Calculator, exec, $calculator

# TKL Extras
binde = $mod, M, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Zoom (via hyprctl, ajustável)
binde = $mod, equal, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 1.1}')
binde = $mod, minus, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 0.9}')
binde = $mod, KP_ADD, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 1.1}')
binde = $mod, KP_SUBTRACT, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 0.9}')

# Lock screen (example with swaylock)
bind = $mod, L, exec, swaylock

# System
bind = $mod Shift, L, exec, systemctl suspend-then-hibernate

# Emoji picker (example with fuzzel)
bind = $mod, Period, exec, fuzzel --emoji

# Clipboard history (example with cliphist)
bind = $mod Shift, C, exec, cliphist list | fuzzel | xargs -r wl-copy

# Test notification
bind = $mod, F12, exec, notify-send -u low -i dialog-information-symbolic 'Test notification' "Hyprland config is working!"

# (Adapte ou acrescente binds extras à vontade)
